{"version":3,"sources":["components/header/header.module.css","components/image-card/image-card.module.css","components/app/app.module.css","components/image-list/image-list.module.css","components/header/header.js","components/search-bar/search-bar.js","components/image-card/image-card.js","components/image-list/image-list.js","components/app/app.js","components/serviceWorker.js","index.js","components/search-bar/search-bar.module.css"],"names":["module","exports","header","link","card","image","content","tags","tag","app","wrapper","container","count","loading","Header","react_default","a","createElement","className","styles","href","target","rel","SearchBar","handleSubmit","event","preventDefault","_this","props","fetchPhotos","_this$props","this","searchTerm","updateSearchTerm","perPage","updatePerPage","onSubmit","search","type","value","onChange","placeholder","map","option","key","concat","btn","disabled","Component","ImageCard","_ref","id","title","owner","ownername","url_z","description","alt","src","name","_content","substr","split","i","ImageList","items","total","length","item","image_card","Object","assign","axiosInstance","axios","create","baseURL","params","api_key","method","safe_search","format","nojsoncallback","extras","App","state","undefined","setState","_ref2","_callee","_this$state","_ref4","data","regenerator_default","wrap","_context","prev","next","text","per_page","sent","photos","photo","stop","_this$state2","search_bar","image_list","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.731d3bea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__9MZ3t\",\"link\":\"header_link__1lo86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"image-card_card__3miak\",\"image\":\"image-card_image__pTSlg\",\"content\":\"image-card_content__2Pf2U\",\"tags\":\"image-card_tags__3c94z\",\"tag\":\"image-card_tag__1isgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__2Ih0e\",\"wrapper\":\"app_wrapper__199fD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"image-list_container__3QD_k\",\"count\":\"image-list_count__13w2P\",\"loading\":\"image-list_loading__1tQHU\"};","import React from 'react';\nimport styles from './header.module.css';\n\nconst Header = () => (\n  <header className={styles.header}>\n    <h1>Flickr Photo Stream</h1>\n    <a\n      className={styles.link}\n      href='https://github.com/ajpwilson/volleyball'\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Repo\n    </a>\n  </header>\n)\n\n\nexport default Header;","import React, { Component } from 'react';\nimport styles from './search-bar.module.css';\n\nclass SearchBar extends Component {\n\n  // onSubmit cancel browser default and fetch requested photos.\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.fetchPhotos();\n  };\n\n  render() {\n    const { searchTerm, updateSearchTerm, perPage, updatePerPage } = this.props;\n\n    return (\n      <div className={styles.wrapper}>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className={styles.search}\n            type=\"text\"\n            value={searchTerm}\n            onChange={updateSearchTerm}\n            placeholder=\"Search...\"\n          />\n          <select value={perPage} onChange={updatePerPage}>\n            {[20, 50, 100].map(option =>\n              <option key={`option-${option}`} value={option}>\n                show {option} results\n              </option>\n            )}\n          </select>\n          <button\n            className={styles.btn}\n            type=\"submit\"\n            disabled={!searchTerm}\n          >\n          Search\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport styles from './image-card.module.css';\n\nconst ImageCard = ({ id, title, owner, ownername, url_z, description, tags }) => (\n  <div className={styles.card}>\n    <div className={styles.image}>\n      <img alt={id} src={url_z} className={styles.image} />\n    </div>\n    <div className={styles.name}>\n      <h3>\n        <a href={`https://www.flickr.com/photos/${owner}/${id}`} rel=\"noopener noreferrer\" target=\"_blank\">\n          {title}\n        </a>\n        <br/>\n        <span>\n            <span>by </span>\n            <a href={`https://www.flickr.com/photos/${owner}`} rel=\"noopener noreferrer\" target=\"_blank\">\n              {ownername}\n            </a>\n          </span>\n        </h3>\n    </div>\n    <div className={styles.content}>\n      <p>\n        {description._content\n          ? description._content.substr(0, 100)\n          : 'No description'}\n      </p>\n    </div>\n    {tags &&\n      <div className={styles.tags}>\n        {(tags.split(' ')).map((tag, i) =>\n          <span key={`tag-${i}`} className={styles.tag}>\n          {tag}\n        </span>)}\n      </div>}\n  </div>\n);\n\nexport default ImageCard;","import React from 'react';\nimport ImageCard from './../image-card/image-card';\nimport styles from './image-list.module.css';\n\nconst ImageList = ({ items, total }) => (\n  <div className={styles.wrapper}>\n    <div className={styles.count}>\n      {items.length > 0 &&\n        <p>Showing {items.length} of {total} results</p>\n      }\n    </div>\n\n    {!items\n      ? <p className={styles.loading}>Loading...</p>\n      : (\n        <div className={styles.container}>\n          {items.map(item => <ImageCard {...item} key={item.id} />)}\n        </div>\n      )}\n  </div>\n)\n\nexport default ImageList;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from '../header/header';\nimport SearchBar from '../search-bar/search-bar';\nimport ImageList from '../image-list/image-list';\nimport styles from './app.module.css';\n\n// I've created an axios instance with the url and default params set to avoid repetition.\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.flickr.com/services/rest/',\n  params: {\n    api_key: '5e263bab53c7c3bfc9350ef4256a1ae7',\n    method: 'flickr.photos.search',\n    safe_search: 1,\n    format: 'json',\n    nojsoncallback: 1,\n    extras: 'description,owner_name,tags,url_o,url_z'\n  }\n});\n\nclass App extends Component {\n  state = {\n    searchTerm: '',\n    perPage: 20,\n    items: [],\n    total: undefined\n  };\n\n  // When the search is updated onChange, the new value is set in the state.\n  updateSearchTerm = ({ target: { value } }) =>\n    this.setState({ searchTerm: value });\n\n  // Same as above but related to number of items being pulled through.\n  updatePerPage = ({ target: { value } }) => this.setState({ perPage: value });\n\n  // Returning a promise using async, this fuction is setting variables to state, Eventually I want to do this in redux.\n  fetchPhotos = async () => {\n    const { searchTerm, perPage } = this.state;\n\n    // Creating the parameter objects from the input.\n    const params = {\n      text: searchTerm,\n      per_page: perPage\n    };\n\n    // Using the axios instance with default params as to not to use unnecessary code by repeating myself.\n    const { data } = await axiosInstance({ params });\n    // Pulling out photos array from response and setting them to state.\n\n    if (data.photos) {\n      // Pulling out arrays of photos and total number of results from response and setting them to state\n      this.setState({\n        items: data.photos.photo,\n        total: data.photos.total\n      });\n    }\n  };\n\n  render() {\n    const { updateSearchTerm, updatePerPage, fetchPhotos } = this;\n    const { items, total, searchTerm, perPage } = this.state;\n\n    return (\n      <div className={styles.app}>\n\n        <Header />\n        <SearchBar\n          searchTerm={searchTerm}\n          updateSearchTerm={updateSearchTerm}\n          perPage={perPage}\n          updatePerPage={updatePerPage}\n          fetchPhotos={fetchPhotos}\n        />\n        <ImageList\n          items={items}\n          total={total}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport * as serviceWorker from './components/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"search-bar_wrapper__3Fw_z\",\"search\":\"search-bar_search__jDNYJ\",\"btn\":\"search-bar_btn__2gwfu\"};"],"sourceRoot":""}