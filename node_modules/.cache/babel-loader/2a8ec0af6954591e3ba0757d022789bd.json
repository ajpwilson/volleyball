{"ast":null,"code":"import _classCallCheck from \"/Users/andy/git/volleyball/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andy/git/volleyball/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andy/git/volleyball/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andy/git/volleyball/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andy/git/volleyball/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andy/git/volleyball/src/components/ImageCard.js\";\nimport React, { Component } from \"react\";\n\nvar ImageCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageCard, _Component);\n\n  function ImageCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spans: 0\n    };\n    _this.imageRef = React.createRef();\n\n    _this.setSpans = function () {\n      var height = _this.imageRef.current.clientHeight;\n      var spans = Math.ceil(height / 10);\n\n      _this.setState({\n        spans: spans\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.imageRef.current.addEventListener(\"load\", this.setSpans);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$image = this.props.image,\n          description = _this$props$image.description,\n          urls = _this$props$image.urls;\n      return React.createElement(\"div\", {\n        style: {\n          gridRowEnd: \"span \".concat(this.state.spans)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        ref: this.imageRef,\n        alt: description,\n        src: urls.regular,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageCard;\n}(Component);\n\nexport default ImageCard;","map":{"version":3,"sources":["/Users/andy/git/volleyball/src/components/ImageCard.js"],"names":["React","Component","ImageCard","state","spans","imageRef","createRef","setSpans","height","current","clientHeight","Math","ceil","setState","addEventListener","props","image","description","urls","gridRowEnd","regular"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;UACRC,Q,GAAWL,KAAK,CAACM,SAAN,E;;UAMXC,Q,GAAW,YAAM;AACf,UAAMC,MAAM,GAAG,MAAKH,QAAL,CAAcI,OAAd,CAAsBC,YAArC;AAEA,UAAMN,KAAK,GAAGO,IAAI,CAACC,IAAL,CAAUJ,MAAM,GAAG,EAAnB,CAAd;;AAEA,YAAKK,QAAL,CAAc;AAAET,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;;;;;;wCAVmB;AAClB,WAAKC,QAAL,CAAcI,OAAd,CAAsBK,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKP,QAApD;AACD;;;6BAUQ;AAAA,8BACuB,KAAKQ,KAAL,CAAWC,KADlC;AAAA,UACCC,WADD,qBACCA,WADD;AAAA,UACcC,IADd,qBACcA,IADd;AAGP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,iBAAU,KAAKhB,KAAL,CAAWC,KAArB;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKC,QAAf;AAAyB,QAAA,GAAG,EAAEY,WAA9B;AAA2C,QAAA,GAAG,EAAEC,IAAI,CAACE,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAxBqBnB,S;;AA2BxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass ImageCard extends Component {\n  state = { spans: 0 };\n  imageRef = React.createRef();\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n\n    const spans = Math.ceil(height / 10);\n\n    this.setState({ spans });\n  };\n\n  render() {\n    const { description, urls } = this.props.image;\n\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n"]},"metadata":{},"sourceType":"module"}